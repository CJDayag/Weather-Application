# Generated by Django 5.1.6 on 2025-03-09 17:48

import django.db.models.deletion
import django.utils.timezone
import weather.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='AlertThreshold',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', models.CharField(choices=[('temp_above', 'Temperature Above'), ('temp_below', 'Temperature Below'), ('rain_above', 'Rainfall Above'), ('wind_above', 'Wind Speed Above'), ('humidity_above', 'Humidity Above'), ('humidity_below', 'Humidity Below')], max_length=20)),
                ('threshold_value', models.FloatField()),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='weather.location')),
            ],
        ),
        migrations.CreateModel(
            name='WeatherData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('temperature', models.FloatField()),
                ('feels_like', models.FloatField(default=0)),
                ('heat_index', models.FloatField(blank=True, null=True)),
                ('wind_chill', models.FloatField(blank=True, null=True)),
                ('dew_point', models.FloatField(blank=True, null=True)),
                ('humidity', models.FloatField()),
                ('pressure', models.FloatField()),
                ('uv_index', models.FloatField(blank=True, null=True)),
                ('wind_speed', models.FloatField()),
                ('wind_direction', models.CharField(default='N/A', max_length=20)),
                ('precipitation', models.FloatField(default=0)),
                ('cloud_coverage', models.IntegerField(default=0)),
                ('description', models.CharField(max_length=100)),
                ('weather_icon_url', models.ImageField(blank=True, null=True, upload_to=weather.models.weather_icon_upload_path)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='weather.location')),
            ],
        ),
        migrations.CreateModel(
            name='AlertNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('sent_email', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('threshold', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='weather.alertthreshold')),
                ('weather_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='weather.weatherdata')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalWeatherData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('min_temp', models.FloatField()),
                ('max_temp', models.FloatField()),
                ('avg_temp', models.FloatField()),
                ('avg_humidity', models.FloatField()),
                ('avg_wind_speed', models.FloatField()),
                ('total_precip_mm', models.FloatField(default=0)),
                ('uv_index', models.FloatField(default=0)),
                ('total_snow_cm', models.FloatField(default=0)),
                ('most_common_description', models.CharField(max_length=100)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='weather.location')),
            ],
            options={
                'unique_together': {('location', 'date')},
            },
        ),
        migrations.CreateModel(
            name='UserLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_default', models.BooleanField(default=False)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='weather.location')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'location')},
            },
        ),
        migrations.CreateModel(
            name='WeatherForecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forecast_date', models.DateField()),
                ('min_temp', models.FloatField(blank=True, null=True)),
                ('max_temp', models.FloatField(blank=True, null=True)),
                ('avg_temp', models.FloatField(blank=True, null=True)),
                ('avg_humidity', models.FloatField(blank=True, null=True)),
                ('avg_wind_speed', models.FloatField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='weather.location')),
            ],
            options={
                'ordering': ['forecast_date'],
                'indexes': [models.Index(fields=['location', 'forecast_date'], name='weather_wea_locatio_0422ef_idx')],
            },
        ),
    ]
